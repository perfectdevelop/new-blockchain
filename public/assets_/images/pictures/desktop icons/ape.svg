var _image;

var _excluded = ["title", "titleId"];

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import * as React from "react";

function SvgApe(_ref, svgRef) {
  var title = _ref.title,
      titleId = _ref.titleId,
      props = _objectWithoutProperties(_ref, _excluded);

  return /*#__PURE__*/React.createElement("svg", _extends({
    xmlns: "http://www.w3.org/2000/svg",
    xmlnsXlink: "http://www.w3.org/1999/xlink",
    width: 882,
    height: 756,
    viewBox: "0 0 882 756",
    ref: svgRef,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, _image || (_image = /*#__PURE__*/React.createElement("image", {
    width: 882,
    height: 756,
    xlinkHref: "data:img/png;base64,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"
  })));
}

var ForwardRef = /*#__PURE__*/React.forwardRef(SvgApe);
export default __webpack_public_path__ + "static/media/ape.fa8b42d9.svg";
export { ForwardRef as ReactComponent };